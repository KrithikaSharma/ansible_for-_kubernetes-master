---
# tasks file for Kubernetes_master

- name: Configuring yum repository for kubernetes
  yum_repository:
    name: k8s
    description: kuberbetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    enabled: true
    gpgcheck: true
    repo_gpgcheck: true
    gpgkey: >-
      https://packages.cloud.google.com/yum/doc/yum-key.gpg
      https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    

- name: installing docker, kubelet, kubeadm, kubectl, n iproute-tc
  package:
    name: "{{ item }}"
  loop:
    - docker
    - kubelet
    - kubeadm
    - kubectl
    - iproute-tc

- name: enabling kubelet and docker services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop: 
    - docker
    - kubelet
              

- name: pulling the images
  command: "kubeadm config images pull"

- name: changing the cgroup driver of docker to systemd
  copy:
    dest: "/etc/docker/daemon.json"
    src: "daemon.json"

- name: restarting docker
  service:
    name: docker
    state: restarted
    enabled: yes

- shell: "echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables"

- name: clearing caches
  shell: "echo '3' > /proc/sys/vm/drop_caches"

- name: copying configuration file of k8s
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    src:  "k8s.conf"

- name: modyfying kernal parameters
  shell: "sysctl --system"

- name: examining service of kubectl
  shell: "kubectl get nodes"
  register: shell_status
  ignore_errors: yes

- name: initializing cluster
  shell: "kubeadm init --pod-network-cidr={{ cidr }} --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  when: shell_status.rc==1

- name: creating .kube directory
  file:
    path: "$HOME/.kube"
    state: directory

- name: copying config file
  shell: "echo Y |  cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

- name: changing ownership of config file
  shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: applying flannel
  shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- name: generating token
  shell: "kubeadm token create  --print-join-command"
  register: token

- name: storing token in token.yml
  blockinfile:
    path: /root/token.yml
    create: yes
    block: |
            join_command: {{ token.stdout }}

- name: copying the token.yml file from master to local
  fetch:
    src: /root/token.yml
    dest: roles/Kubernetes_slave/vars/main.yml
    flat: yes


